// Place your key bindings in this file to override the defaultsauto[]
[
	// Move to the previous/next editor.
	{
		"key": "ctrl+k",
		"command": "workbench.action.nextEditor"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.previousEditor"
	},

	// Move active editor left or right (useful for full-stack web dev).
	{
		"key": "ctrl+shift+j",
		"command": "moveActiveEditor",
		"args": {
			"to": "left"
		}
	},
	{
		"key": "ctrl+shift+k",
		"command": "moveActiveEditor",
		"args": {
			"to": "right"
		}
	},
	// Traverse IntelliSense suggestions with vim keybindings.
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	// Traverse VSCode quick open options with vim keybindings.
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},

	// VSCode terminal commands. Still in Mac form, not editted for Windows.
	// {
	//   "key": "cmd+n",
	//   "command": "workbench.action.terminal.newInActiveWorkspace"
	// },
	// {
	//   "key": "cmd+enter",
	//   "command": "workbench.action.terminal.toggleTerminal"
	// },
	// {
	//   "key": "cmd+ctrl+enter",
	//   "command": "workbench.action.toggleMaximizedPanel"
	// },
	// {
	//   "key": "cmd+d",
	//   "command": "workbench.action.terminal.split",
	//   "when": "terminalFocus && terminalProcessSupported"
	// },
	// {
	//   "key": "cmd+\\",
	//   "command": "-workbench.action.terminal.split",
	//   "when": "terminalFocus && terminalProcessSupported"
	// },
	// {
	//   "key": "cmd+k",
	//   "command": "workbench.action.terminal.focusNextPane",
	//   "when": "terminalFocus && terminalProcessSupported"
	// },
	// {
	//   "key": "alt+cmd+down",
	//   "command": "-workbench.action.terminal.focusNextPane",
	//   "when": "terminalFocus && terminalProcessSupported"
	// },
	// {
	//   "key": "cmd+j",
	//   "command": "workbench.action.terminal.focusPreviousPane",
	//   "when": "terminalFocus && terminalProcessSupported"
	// },
	// {
	//   "key": "alt+cmd+up",
	//   "command": "-workbench.action.terminal.focusPreviousPane",
	//   "when": "terminalFocus && terminalProcessSupported"
	// },
	// {
	//   "key": "cmd+w",
	//   "command": "workbench.action.terminal.kill",
	//   "when": "terminalFocus"
	// },

	// Ensure that tab button works in vim.
	// {
	//   "key": "tab",
	//   "command": "tab",
	//   "when": "editorTextFocus && !editorTabMovesFocus"
	// },
	{
		"key": "shift+tab",
		"command": "outdent",
		"when": "editorTextFocus && !editorTabMovesFocus"
	},

	// The below is mine, not related to VIM
	{
		"key": "ctrl+alt+z",
		"command": "python.execInTerminal-icon"
	},
	{
		"key": "alt+\\",
		"command": "-editor.action.inlineSuggest.trigger",
		"when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
	},
	{
		"key": "ctrl+i",
		"command": "composerMode.agent"
	},
	{
		"key": "ctrl+p",
		"command": "-expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+p",
		"command": "-extension.vim_ctrl+p",
		"when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
	},
	{
		"key": "ctrl+k",
		"command": "-aipopup.action.modal.generate",
		"when": "editorFocus && !composerBarIsVisible"
	},
	{
		"key": "ctrl+shift+k",
		"command": "-aipopup.action.modal.generate",
		"when": "editorFocus && !composerBarIsVisible"
	},
	{
		"key": "ctrl+w",
		"command": "-extension.vim_ctrl+w",
		"when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
	},
	{
		"key": "ctrl+f",
		"command": "extension.vim_ctrl+f",
		"when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "ctrl+f",
		"command": "-extension.vim_ctrl+f",
		"when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "meta+f",
		"command": "actions.find",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+f",
		"command": "-actions.find",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+h",
		"command": "-editor.action.simpleInlineDiffs.rejectAll",
		"when": "editorTextFocus && hasDisplayedSimpleDiff"
	},
	{
		"key": "ctrl+h",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+h",
		"command": "-extension.vim_ctrl+h",
		"when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
	}
]
