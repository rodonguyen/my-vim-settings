// Place your key bindings in this file to override the defaultsauto[]
[
	// Move to the previous/next editor.
	{
		"key": "ctrl+k",
		"command": "workbench.action.nextEditor"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.previousEditor"
	},

	// Move active editor left or right (useful for full-stack web dev).
	{
		"key": "ctrl+shift+j",
		"command": "moveActiveEditor",
		"args": {
			"to": "left"
		}
	},
	{
		"key": "ctrl+shift+k",
		"command": "moveActiveEditor",
		"args": {
			"to": "right"
		}
	},
	// Traverse IntelliSense suggestions with vim keybindings.
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	// Traverse VSCode quick open options with vim keybindings.
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},

	// VSCode terminal commands.
	{
		"key": "ctrl+n", // New terminal
		"command": "workbench.action.terminal.newInActiveWorkspace"
	},
	{
		"key": "ctrl+enter", // Toggle terminal display
		"command": "workbench.action.terminal.toggleTerminal"
	},
	{
		"key": "ctrl+d", // Split terminal
		"command": "workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+w", // Kill terminal
		"command": "workbench.action.terminal.kill",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+i",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+u",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	// FILE TREE
	{
		"command": "workbench.files.action.focusFilesExplorer",
		"key": "ctrl+e", // Open file explorer
		"when": "editorTextFocus"
	},
	{
		"key": "n",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"command": "renameFile",
		"key": "r",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "shift+n",
		"command": "explorer.newFolder",
		"when": "explorerViewletFocus"
	},
	{
		"command": "deleteFile",
		"key": "d",
		"when": "filesExplorerFocus && !inputFocus"
	},
	// EXTRA
	// {
	// 	"key": "ctrl+shift+5",
	// 	"command": "editor.emmet.action.matchTag"
	// },
	// {
	// 	"key": "ctrl+z",
	// 	"command": "workbench.action.toggleZenMode" // Will enable when I'm used to 'u'ndo in vim
	// },

	// ===== The below is mine, not related to VIM =====
	{
		"key": "ctrl+alt+z",
		"command": "python.execInTerminal-icon"
	},
	{
		"key": "ctrl+capslock ctrl+n",
		"command": "workbench.action.files.newUntitledFile" // "New file" command
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "-extension.vim_ctrl+p",
		"when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
	},
	{
		"key": "ctrl+i",
		"command": "-extension.vim_ctrl+i",
		"when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
	},
	{
		"key": "ctrl+m",
		"command": "-editor.action.toggleTabFocusMode"
	}
]
